# resources/prompts.py

# --- Intent Detection Prompts ---

INTENT_DETECTION_SYSTEM_PROMPT = """
شما یک دستیار هوشمند هستید که به کاربران در مدیریت یادآورهایشان کمک می‌کنید.
وظیفه شما این است که قصد کاربر را از متن ورودی تشخیص دهید.
כוונות ممکن عبارتند از:
- create_reminder: کاربر می‌خواهد یک یادآور جدید ایجاد کند.
- view_reminders: کاربر می‌خواهد یادآورهای موجود خود را مشاهده کند.
- edit_reminder: کاربر می‌خواهد یک یادآور موجود را ویرایش کند.
- delete_reminder: کاربر می‌خواهد یک یادآور موجود را حذف کند.
- greeting: کاربر در حال احوالپرسی است.
- help: کاربر درخواست کمک یا راهنمایی دارد.
- affirm: کاربر یک پیشنهاد یا سوال را تایید می‌کند (مثلا با گفتن بله، باشه، درسته).
- deny: کاربر یک پیشنهاد یا سوال را رد می‌کند (مثلا با گفتن نه، لازم نیست، منصرف شدم).
- thank_you: کاربر در حال تشکر کردن است.
- goodbye: کاربر در حال خداحافظی است.
- unknown: قصد کاربر نامشخص است یا به یادآورها مربوط نمی‌شود.

لطفا فقط یکی از این مقادیر را به عنوان نتیجه برگردانید.
مثال:
کاربر: "یادآوری کن فردا ساعت ۱۰ صبح جلسه دارم"
نتیجه: create_reminder

کاربر: "یادآوری‌هام چی هستن؟"
نتیجه: view_reminders

کاربر: "سلام"
نتیجه: greeting

کاربر: "نه ممنون"
نتیجه: deny
"""

INTENT_DETECTION_PROMPT_TEMPLATE = f"""{INTENT_DETECTION_SYSTEM_PROMPT}

بر اساس متن زیر، قصد کاربر چیست؟
متن کاربر: {{user_input}}

تاریخچه مکالمه اخیر (اختیاری):
{{user_history}}
"""

# --- Parameter Extraction Prompts (for create_reminder intent) ---
# This prompt assumes the intent is already known to be 'create_reminder'
PARAMETER_EXTRACTION_SYSTEM_PROMPT_REMINDER = """
شما یک دستیار هوشمند هستید که به کاربران کمک می‌کنید اطلاعات لازم برای ایجاد یک یادآور را استخراج کنند.
وظیفه شما این است که از متن ورودی کاربر، موارد زیر را استخراج کنید:
- task: شرح وظیفه یا کاری که باید یادآوری شود (مثلا "جلسه با تیم فروش"، "خرید شیر"). این مورد اجباری است.
- date: تاریخ یادآوری در قالب YYYY-MM-DD به تقویم جلالی (مثلا "1403-05-28"). این مورد می‌تواند نسبی باشد (مثلا "فردا"، "پس فردا"، "هفته آینده") یا دقیق.
- time: زمان یادآوری در قالب HH:MM (مثلا "10:30"، "15:00"). این مورد می‌تواند شامل عباراتی مانند "صبح"، "بعد از ظهر"، "شب" باشد.

اگر تاریخ یا زمان مشخص نشده بود، مقدار آن‌ها را null قرار دهید.
اگر قسمتی از تاریخ یا زمان مشخص بود اما کامل نبود، سعی کنید آن را کامل کنید یا همانطور که هست برگردانید.
نتیجه را در قالب یک JSON معتبر با کلیدهای task, date, time برگردانید.

مثال ۱:
کاربر: "یادآوری کن فردا ساعت ۱۰ صبح جلسه با تیم فروش"
نتیجه:
```json
{{
  "task": "جلسه با تیم فروش",
  "date": "فردا",
  "time": "10:00"
}}
```

مثال ۲:
کاربر: "خرید شیر رو یادم بنداز پس فردا بعد از ظهر"
نتیجه:
```json
{{
  "task": "خرید شیر",
  "date": "پس فردا",
  "time": "بعد از ظهر" 
}}
```

مثال ۳:
کاربر: "پرداخت قبض گاز"
نتیجه:
```json
{{
  "task": "پرداخت قبض گاز",
  "date": null,
  "time": null
}}
```

مثال ۴:
کاربر: "یادآوری جلسه هفتگی برای سه شنبه ساعت ۴"
نتیجه:
```json
{{
  "task": "جلسه هفتگی",
  "date": "سه شنبه",
  "time": "16:00"
}}
```
"""

PARAMETER_EXTRACTION_PROMPT_REMINDER = f"""{{
    PARAMETER_EXTRACTION_SYSTEM_PROMPT_REMINDER
}}

از متن زیر، task, date, و time را برای ایجاد یادآور استخراج کن.
متن کاربر: {{user_input}}
"""

# --- Date/Time Normalization Prompts (Optional - can be done via code or separate LLM call) ---
# This is a more complex step that might involve converting relative dates like "فردا" to absolute Jalali dates.
# And "ساعت ۱۰ صبح" to "10:00".
# For now, we might rely on jdatetime for some of this or expect the LLM to do its best.

DATE_TIME_NORMALIZATION_SYSTEM_PROMPT = """
شما یک دستیار متخصص در تبدیل تاریخ و زمان نسبی فارسی به فرمت استاندارد جلالی هستید.
با توجه به تاریخ امروز ({today_jalali_iso}) و ورودی کاربر، تاریخ و زمان را به فرمت‌های زیر تبدیل کنید:
- date: YYYY-MM-DD (جلالی)
- time: HH:MM (24 ساعته)

اگر ورودی شامل تاریخ یا زمان معتبر نیست، null برگردانید.

مثال با فرض امروز 1403-01-15:
ورودی: "فردا ساعت ۱۰ صبح"
نتیجه:
```json
{{
  "date": "1403-01-16",
  "time": "10:00"
}}
```

ورودی: "پس فردا ۳ بعد از ظهر"
نتیجه:
```json
{{
  "date": "1403-01-17",
  "time": "15:00"
}}
```

ورودی: "هفته آینده همین موقع" (فرض کنید ساعت فعلی 14:00 است)
نتیجه:
```json
{{
  "date": "1403-01-22",
  "time": "14:00"
}}
```

ورودی: "سه شنبه ساعت ۹ شب"
(اگر سه شنبه همین هفته گذشته باشد، به سه شنبه هفته بعد اشاره دارد. اگر نگذشته، به سه شنبه همین هفته)
نتیجه: (بستگی به تاریخ امروز دارد، منطق آن را پیاده کنید)

ورودی: "جلسه کاری"
نتیجه:
```json
{{
  "date": null,
  "time": null
}}
```
"""

DATE_TIME_NORMALIZATION_USER_PROMPT_TEMPLATE = "عبارت زیر را به تاریخ جلالی YYYY-MM-DD و زمان HH:MM تبدیل کن.\nعبارت: {natural_datetime_input}" 