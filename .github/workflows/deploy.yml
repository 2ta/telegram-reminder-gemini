name: Deploy Telegram Bot

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
        
    - name: Add server to known hosts
      run: |
        ssh-keyscan -p 61208 45.77.155.59 >> ~/.ssh/known_hosts
        
    - name: Deploy to server
      run: |
        ssh -p 61208 root@45.77.155.59 << 'EOF'
          set -e
          
          echo "üöÄ Starting deployment..."
          
          # Navigate to project directory
          cd /root/telegram_reminder_bot_project || {
            echo "‚ùå Project directory not found. Please clone the repository first."
            exit 1
          }
          
          echo "üì• Pulling latest changes..."
          git pull origin main
          
          echo "üêç Setting up Python environment..."
          # Create virtual environment if it doesn't exist
          if [ ! -d ".venv" ]; then
            python3 -m venv .venv
          fi
          
          # Activate virtual environment
          source .venv/bin/activate
          
          # Upgrade pip
          pip install --upgrade pip
          
          echo "üì¶ Installing dependencies..."
          # Uninstall conflicting packages first
          pip uninstall -y google-generativeai langchain-google-genai google-ai-generativelanguage || true
          
          # Install requirements
          pip install -r requirements.txt
          
          echo "üóÑÔ∏è Setting up database..."
          # Initialize database if needed
          python -c "
          import sys
          sys.path.append('.')
          try:
              from src.database import init_db
              init_db()
              print('Database initialized successfully!')
          except Exception as e:
              print(f'Database setup: {e}')
          "
          
          echo "üîÑ Restarting bot service..."
          # Stop existing tmux session
          tmux kill-session -t telegram_bot 2>/dev/null || true
          
          # Wait a moment
          sleep 2
          
          # Start new tmux session with bot
          tmux new-session -d -s telegram_bot
          tmux send-keys -t telegram_bot "cd /root/telegram_reminder_bot_project" Enter
          tmux send-keys -t telegram_bot "source .venv/bin/activate" Enter
          tmux send-keys -t telegram_bot "python start_bot.py" Enter
          
          echo "‚úÖ Deployment completed successfully!"
          echo "üìä Bot status:"
          tmux list-sessions | grep telegram_bot || echo "‚ùå Bot session not found"
          
        EOF
        
    - name: Verify deployment
      run: |
        ssh -p 61208 root@45.77.155.59 << 'EOF'
          echo "üîç Verifying deployment..."
          
          # Check if tmux session exists
          if tmux has-session -t telegram_bot 2>/dev/null; then
            echo "‚úÖ Bot tmux session is running"
            
            # Check if bot process is actually running
            if tmux capture-pane -t telegram_bot -p | grep -q "Bot started\|Application\|Telegram"; then
              echo "‚úÖ Bot appears to be running successfully"
            else
              echo "‚ö†Ô∏è Bot session exists but may not be running properly"
              echo "Last few lines from bot session:"
              tmux capture-pane -t telegram_bot -p | tail -5
            fi
          else
            echo "‚ùå Bot tmux session not found"
            exit 1
          fi
        EOF 